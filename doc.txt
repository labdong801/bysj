2.1 网页制作简述
网页设计是指使用标识语言（HTML)，通过一系列设计、建模、和执行的过程将电子格式的信息通过互联网传输，最终以图形用户界面（GUI）的形式被用户所浏览。
简单来说，网页设计的目的就是产生网站。简单的信息如文字，图片（GIFs， JPEGs，PNGs）和表格，都可以通过使超文件标示语言、可扩展超文本标记语言等标示语言放置到网站页面上。而更复杂的信息如矢量图形、动画、视频、声频等多媒体档案则需要插件程序来运行，同样地它们亦需要标示语言移植在网站内。
浏览器-服务器（Browser/Server）结构，简称B/S结构，与C/S结构不同，其客户端不需要安装专门的软件，只需要浏览器即可，浏览器通过Web服务器与数据库进行交互，可以方便的在不同平台下工作；服务器端可采用高性能计算机，并安装Oracle、Sybase、Informix等大型数据库。B/S结构简化了客户端的工作，它是随着Internet技术兴起而产生的，对C/S技术的改进，但该结构下服务器端的工作较重，对服务器的性能要求更高。随着技术的发展，越来越多的管理系统采用B/S结构。

2.2 div+css布局方式
DIV+CSS是网站标准（或称“WEB标准”）中常用术语之一，div+css 是一种网页的布局方法，这一种网页布局方法有别于传统的HTML网页设计语言中的表格（table）定位方式，可实现网页页面内容与表现相分离。XHTML是The Extensible HyperText Markup Language（可扩展超文本标识语言）的缩写。XHTML基于可扩展标记语言（XML），是一种在HTML 基础上优化和改进的的新语言，目的是基于XML应用与强大的数据转换能力，适应未来网络应用更多的需求。在XHTML网站设计标准中，不再使用表格定位技术，而是采用DIV+CSS的方式实现各种定位。
在嵌入式样式表中我们可以使用@import导入一个外部样式表，例：
<style type=”text/css”>
@import url(外部样式表位置)；
…其它嵌入式的样式定义…
</style>
内联样式表：
写在开始标记里面，比如你要p变蓝色，
<p style=”color:blue;”>变为蓝色</p>
三种样式表优先使用外部样式表、嵌入式样式表用来调试用的、一般不使用内联样式表。


2.3Apache服务器
Apache起初由伊利诺伊大学香槟分校的国家超级电脑应用中心（NCSA）开发。此后，Apache Httpd被开放源代码团体的成员不断的发展和加强。Apache Http网站服务器拥有牢靠可信的美誉，已经在全球超过半数的网站中被使用－特别是几乎所有最热门和浏览量最大的网站。比方说，维基百科网站服务器就是使用Apache的。
刚开始发展时，Apache只是Netscape网页服务器（现在是Sun ONE）之外的开放源代码选择之一。慢慢地，它开始在功能和速度超越其他基于Unix的HTTP服务器。到了Apache 2.x的时代，实际效率又比Apache 1.x更快，2.x比1.x能同时服务更多的网页连接数。
1996年4月以来，Apache一直是Internet上最流行的HTTP服务器：1999年5月它在57%的网页服务器上运行，到了2005年7月这个比例上升到了69%。在2005年11月最风光的时候达到接近70%的市占率，不过在部份拥有大量域名的主机域名商转换为微软IIS平台后，Apache市占率近年来呈现些微下滑。同时搜索引擎巨擘Google自己的网页服务器平台GWS推出后(也可说是一种修改版的Apache)，再加上nginx、Lighttpd等轻量化网页服务器软件在市场上有一些能见度，这些因素都反应在整体网页服务器市占率的消长，Apache的市占率就随之滑落。根据Netcraft在2009年12月的最新统计数据，Apache的市占率已经降为53.67％，IIS降为18.26％，谷歌网页服务器13.53％，nginx 8.75％。尽管如此，Apache仍旧是当前互联网市场上，市占率最高的网页服务器软件。
作者宣称因为Apache这个名字好记，所以才在最初选择它，但是流传最广的解释是（也是最显而易见的）：这个名字来自于一个事实：当Apache在1995年初开发的时候，它是由当时最流行的HTTP服务器NCSA HTTPd 1.3的代码修改而成的，因此是“一个修补的（a patchy）”服务器。然而，在Apache服务器官方网站的FAQ中是这么解释的：“Apache这个名字是为了纪念名为Apache的美洲原住民印第安人的一支，众所周知他们拥有高超的作战策略和无穷的耐性。”贝伦多夫说：“我选择阿帕奇这个名字是取其积极含义。阿帕奇族是最后一个屈服于美国政府的民族。当时我们担心大公司迟早会参与竞争并‘教化’这块最早的网络之地，所以在我看来，阿帕奇是个很好的名称，也有人说这个词一语双关-因为正如APAtCHy的名字所表明的那样，他们确实是在给服务器打补丁。”无论如何，Apache 2.x分支不包含任何NCSA的程序代码。


2.4PHP+Mysql技术


2.5phpmyadmin数据库管理
phpMyAdmin 是一个以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，让管理者可用Web接口管理MySQL数据库。借由此Web接口可以成为一个简易方式输入繁杂SQL语法的较佳途径，尤其要处理大量资料的汇入及汇出更为方便。其中一个更大的优势在于由于phpMyaAdmin跟其他PHP程式一样在网页服务器上执行，但是您可以在任何地方使用这些程式产生的HTML页面，也就是于远端管理MySQL数据库，方便的建立、修改、删除数据库及资料表。也可借由phpMyAdmin建立常用的php语法，方便编写网页时所需要的sql语法正确性。
补图

2.6jquery技术
jQuery是一套跨浏览器的JavaScript库，简化HTML与JavaScript之间的操作。由John Resig在2006年1月的BarCamp NYC上发布第一个版本。目前是由 Dave Methvin 领导的开发团队进行开发。jQuery 是开源软件，使用MIT许可证授权。jQuery的语法设计使得许多操作变得容易，如操作文档对象（document）、选择DOM元素、创建动画效果、处理事件、以及开发Ajax程序。jQuery 也提供了给开发人员在其上创建插件的能力。这使开发人员可以对底层交互与动画、高级效果和高级主题化的组件进行抽象化。模块化的方式使 jQuery 函数库能够创建功能强大的动态网页以及网络应用程序。全球前10000个访问最高的网站中，有59%使用了jQuery，是目前最受欢迎的JavaScript库。
jQuery的使用十分方便，使用CDN加载jQuery的好处是若不同的网站使用同样的链接时可以不用重复下载，另外也可不用在自己的服务器上部署jQuery文件。
<script src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.8.0.min.js"></script>
这样就引入了jQuery的脚本库。
jQuery另外一个很出色的地方就是AJAX技术。JAVA语言的第一版发布，随之发布的的 Java applets(JAVA小程序)首次实现了异步加载。浏览器通过运行嵌入网页中的Java applets与服务器交换数据，不必刷新网页。1996年，Internet Explorer将iframe元素加入到HTML，支持局部刷新网页。使用Ajax的最大优点，就是能在不更新整个页面的前提下维护数据。这使得Web应用程序更为迅捷地回应用户动作，并避免了在网络上发送那些没有改变的信息。但是Ajax却有着最大的缺点，它对不同的浏览器兼容性非常的差。jQuery却封装好不同浏览器的Ajax方法，使程序员在开发的时候并不需要考虑浏览器的兼容问题，并且还简化了Ajax的使用方法。
传统的javascript使用Ajax的方法：

jQuery使用Ajax的方法：

由于Ajax的能给用户带来优秀的体验，所以在选课系统中被大量使用。


2.7git代码管理仓库
Git是用于Linux内核开发的版本控制工具。与CVS、Subversion一类的集中式版本控制工具不同，它采用了分布式版本库的作法，不需要服务器端软件，就可以运作版本控制，使得源代码的发布和交流极其方便。Git的速度很快，这对于诸如Linux kernel这样的大项目来说自然很重要。Git最为出色的是它的合并追踪（merge tracing）能力。
实际上内核开发团队决定开始开发和使用Git来作为内核开发的版本控制系统的时候，世界开源社群的反对声音不少，最大的理由是Git太艰涩难懂，从Git的内部工作机制来说，的确是这样。但是随着开发的深入，Git的正常使用都由一些友善的命令稿来执行，使Git变得非常好用。现在，越来越多的著名项目采用Git来管理项目开发，例如：wine、U-boot等。
Git的使用方法：
以Linux系统为例，ubuntu系统先安装Git软件。
sudo apt-get install git




本章小结：
本章主要介绍了选课系统中主要用到的主流技术。在现在互联网时代，B/S这种结构的管理系统十分受欢迎。一是因为时代不断在发展，现在网络的发展水平无论从带宽或者服务器性能，都足够让这种新兴技术发展起来。二是这种结构并不依赖客户端机器的性能，而主要的计算任务在服务器中完成，减少客户的计算压力，让用户使用起来十分方便。这种模式正好和云计算的发展情况互相吻合的。但是B/S结构也有它的不足，网页间的数据传递必须依靠HTTP协议进行，每次进行数据交换必须重新加载网页。这样在用户数量多的情况下，就会占用较大的带宽，消耗较多的CPU资源，浪费了很多不必要的流量，并且消耗很多时间，这也是这种技术在早期带宽较慢，CPU计算能力较落后时没有兴起的原因。
直到Ajax技术的发展，网页带给用户的体验才得到改善。Ajax技术能够局部刷新网页，使用户能够异步提交数据，与服务器交换数据时不想要不断刷新。这个改进能够节约带宽，只需要传输要刷新的局部数据，而不许要重新加载整个网页。但是Ajax诞生以来并没有顺利的发展，由于各种浏览器之间的相互竞争，使得各个浏览器之间的兼容性很差。这一点在Ajax上尤为突出。在不同的浏览器中，往往需要对Ajax部署不同的代码。这样开发者在使用Ajax中，常常需要准备几种兼容的方案，加长了软件开发周期。jQuery的出现改变了这一个局面。jQuery的制作团队很好的设计的不同浏览器之间的兼容问题，并且简化了Ajax的操作方法，用简单的两三据话就能够完成一个复杂的Ajax设计。




